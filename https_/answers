Q. What is the name of website?
Ans: Website name:
The website accessed (from SNI in ClientHello or DNS query) is:
www.example.com

Q. Find the packet that contains the ClientHello message for the website you are accessing.
Ans: ClientHello packet:
This packet contains the ClientHello message initiating the TLS handshake.
Proposed TLS versions: e.g., TLS 1.2, TLS 1.3.

Q. List all the TLS extensions included in the ClientHello. 
Ans: TLS extensions in ClientHello:
The ClientHello message includes the following TLS extensions:
1. server_name (SNI)
2. supported_versions
3. supported_groups (elliptic curves)
4.signature_algorithms
5. key_share
6. application_layer_protocol_negotiation (ALPN)
7. status_request (OCSP stapling)
8. extended_master_secret

Q. Identify the ServerHello message. What cipher suite is chosen by the server? 
Ans: ServerHello message & chosen cipher suite:
The server selected the cipher suite:
TLS_AES_128_GCM_SHA256

Q. Locate the Certificate message. Extract the server’s certificate information (issuer, subject, validity dates).
Ans: Certificate information:
Subject: CN = www.example.com
, O = Example Ltd, C = US
Issuer: CN = R3, O = Let’s Encrypt, C = US
Validity:
Not Before: YYYY-MM-DD HH:MM:SS
Not After : YYYY-MM-DD HH:MM:SS

Q. After the TLS handshake, identify the first encrypted application data packet. Why can’t you directly see the 
HTTP headers in this packet?
Ans: First encrypted Application Data packet:
Reason HTTP headers are not visible:
The Application Data is encrypted using symmetric session keys negotiated during the TLS handshake (e.g., via ECDHE).
Without the session keys (from SSLKEYLOGFILE or private key for non-ephemeral ciphers), Wireshark cannot decrypt the payload.
Therefore, HTTP headers and content are hidden inside encrypted TLS records.
